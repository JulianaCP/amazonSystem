/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project1;

import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Juliana
 */
public class WindowBuyProduct extends javax.swing.JFrame {

    /**
     * Creates new form WindowBuyProduct
     */
    public WindowBuyProduct() {
        initComponents();
        
        //fuction: locates the window in the enter of the screen and name the window accordin to the objective of the same
        
        this.setTitle("Product Categorie");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupProductCategories = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        radioButtonCategorieClothes = new javax.swing.JRadioButton();
        radioButtonCategorieFurnitures = new javax.swing.JRadioButton();
        radioButtonCategorieElectrodomestics = new javax.swing.JRadioButton();
        buttonModificateShoppingCar = new javax.swing.JButton();
        buttonBackWindowBuyProductToWindowOption = new javax.swing.JButton();
        buttonBuyProductOfTheCatagorie = new javax.swing.JButton();
        buttonGoToTheCategorie = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product Categories", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        buttonGroupProductCategories.add(radioButtonCategorieClothes);
        radioButtonCategorieClothes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radioButtonCategorieClothes.setText("Clothes");

        buttonGroupProductCategories.add(radioButtonCategorieFurnitures);
        radioButtonCategorieFurnitures.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radioButtonCategorieFurnitures.setText("Furnitures");

        buttonGroupProductCategories.add(radioButtonCategorieElectrodomestics);
        radioButtonCategorieElectrodomestics.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radioButtonCategorieElectrodomestics.setText("Electrodomestics");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radioButtonCategorieClothes)
                .addGap(18, 18, 18)
                .addComponent(radioButtonCategorieFurnitures)
                .addGap(18, 18, 18)
                .addComponent(radioButtonCategorieElectrodomestics)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonCategorieClothes)
                    .addComponent(radioButtonCategorieFurnitures)
                    .addComponent(radioButtonCategorieElectrodomestics))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        buttonModificateShoppingCar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonModificateShoppingCar.setText("Modificate Shopping Car");
        buttonModificateShoppingCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificateShoppingCarActionPerformed(evt);
            }
        });
        getContentPane().add(buttonModificateShoppingCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        buttonBackWindowBuyProductToWindowOption.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonBackWindowBuyProductToWindowOption.setText("Back");
        buttonBackWindowBuyProductToWindowOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackWindowBuyProductToWindowOptionActionPerformed(evt);
            }
        });
        getContentPane().add(buttonBackWindowBuyProductToWindowOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 253, -1, -1));

        buttonBuyProductOfTheCatagorie.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonBuyProductOfTheCatagorie.setText("Buy Shopping Car");
        buttonBuyProductOfTheCatagorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuyProductOfTheCatagorieActionPerformed(evt);
            }
        });
        getContentPane().add(buttonBuyProductOfTheCatagorie, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 149, -1));

        buttonGoToTheCategorie.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonGoToTheCategorie.setText("Go the Categorie");
        buttonGoToTheCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGoToTheCategorieActionPerformed(evt);
            }
        });
        getContentPane().add(buttonGoToTheCategorie, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 253, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project1/12055294_1007424805986273_1091806738_o.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateListOfProducts(){   

        
        //input: 
        //output: 
        //retriction: 
        //function: through the list of details of the cart and  updating data prinicipal Product List, eliminate object
        //that not have any quantitu of product of reducing quantity of the data. eliminate the product that were prchased
        

        
        Buyer buyer = (Buyer) Global.userList.get(Global.positionOfTheUser);
        ArrayList list = buyer.getCarOfTheUser();    
        PrePurchase prePurchase = (PrePurchase) list.get(Constant.POSITION_ABSOLUTE_IN_LIST_OF_PREPURCHASE);

       
        for(Detail detail : prePurchase.getListDetails()){
            for(Product product : Global.productList){
                if(detail.getIdProduct() == product.getIdProduct()){
                    
                    int amountProductToBuyInPrePurchase = detail.getQuantity();
                    int amountTotalProductInList = product.getQuantityAvailable();
                    
                    
                  
                    
                    if(amountProductToBuyInPrePurchase == amountTotalProductInList){
                       
                        Global.productList.remove(product);
                        break;
                    }
                    else{
                        int totalProductInListOfProduct = amountTotalProductInList - amountProductToBuyInPrePurchase;
                        product.setQuantityAvailable(totalProductInListOfProduct);
                        break;
                    }
                    
                }
                
            }
    
        }
        
    }
    
    private void insertDetailsOfPrePurchaseInDetailsOfPurchase(){

        //input:  
        //output: 
        //retriction: 
        //function: through the list of pre purchases located in the list of product that have the shopping car
        //and create purchase detail (detail located inside of each element of the purchase list) for each 
        //product located in the shopping car. Formalizes a purchase, saving the result
        
        int identificationPurchase = Global.purchaseList.size() + 1;
 
        Date now = new Date();
        DateFormat df =  DateFormat.getDateInstance();
        String dateOfThePurchase =  df.format(now);
        
   
       
     
        Buyer buyer = (Buyer) Global.userList.get(Global.positionOfTheUser);
        ArrayList list = buyer.getCarOfTheUser();    
        PrePurchase prePurchase = (PrePurchase) list.get(Constant.POSITION_ABSOLUTE_IN_LIST_OF_PREPURCHASE);
 
       
        Purchase purchase = new Purchase(identificationPurchase,Global.userName,dateOfThePurchase,prePurchase.getTotalQuantity()); 
        
                
                
        for(Detail detail : prePurchase.getListDetails()){
            int quantity = detail.getQuantity();
            String nameProduct  = detail.getNameProduct();
            int idProduct = detail.getIdProduct();
            double totalPrice  = detail.getTotalPrice();
            String sellerUserName = detail.getSellerUserName();
            double individualPrice = detail.getIndividualPrice();
            String state = "True";
            
            
            PurchaseDetail purchaseDetails = new PurchaseDetail(quantity, nameProduct , idProduct, totalPrice , sellerUserName, individualPrice, state);
       
            purchase.insertDetailsInListOfPurchaseDetails(purchaseDetails);
        }
        Global.purchaseList.add(purchase);
        
        
        prePurchase.getListDetails().clear();
        prePurchase.setTotalQuantity(Constant.INITIAL_AMOUNT_QUANTITY_PRODUCT_DETAIL);

    }
    
    
    private void buttonBuyProductOfTheCatagorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuyProductOfTheCatagorieActionPerformed
        // TODO add your handling code here:
        
        //input:  
        //output: 
        //retriction: 
        //function: is in charge of call all the method that update the list of product and create new element in order 
        // to realice the purchase, also this method verificate that the person try to buy a shopping car that not
        //have elements
        
        
          
        boolean haveProductInListOfPrePurchase = true;
        for(User user : Global.userList){
            if(user.getUserName().equals(Global.userName)){
                Buyer variableBuyer = (Buyer)user;
                for(PrePurchase detail : variableBuyer.getCarOfTheUser()){
                    if(detail.getListDetails().isEmpty()){
                        
                        haveProductInListOfPrePurchase = false;
                        break;
                    }
                }
                
                  
            }
            
        }
        if(haveProductInListOfPrePurchase == false){
            JOptionPane.showMessageDialog(this,"You dont have any product selected");
            return;
        }
                
        
        updateListOfProducts();
        insertDetailsOfPrePurchaseInDetailsOfPurchase(); // crea detalles de compra tanto haya detalles de carrito, los va agregando a la compra al finalizar guarda compra en lista general
        
        JOptionPane.showMessageDialog(this,"purchase made with success");
        
        WindowCreateReviewBuyer window = new WindowCreateReviewBuyer();
        window.setVisible(true);
        this.dispose();
        
        
        
    }//GEN-LAST:event_buttonBuyProductOfTheCatagorieActionPerformed

    private void buttonGoToTheCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGoToTheCategorieActionPerformed
        // TODO add your handling code here:
        
    
        //input:  
        //output: 
        //retriction: 
        //function: is a type a menu, that obtain the desition of the user to see someone information, so this method call
        // diferents window according to the desition of the user
      
        
    if( ! radioButtonCategorieClothes.isSelected() && ! radioButtonCategorieElectrodomestics.isSelected() && ! radioButtonCategorieFurnitures.isSelected() ){
            return;
        }
                
    if(radioButtonCategorieClothes.isSelected()){
            WindowBuyProductClothes window = new WindowBuyProductClothes();
            window.setVisible(true);
            this.dispose();
        }
    else if(radioButtonCategorieElectrodomestics.isSelected()){
            WindowBuyProductElectrodomestics window = new WindowBuyProductElectrodomestics();
            window.setVisible(true);
            this.dispose();
        
    }
    else if(radioButtonCategorieFurnitures.isSelected()){
            WindowBuyProductFurnitures window = new WindowBuyProductFurnitures();
            window.setVisible(true);
            this.dispose();
        
    }
    else{
        JOptionPane.showMessageDialog(this,"select a type of category");
    }
    
    
    }//GEN-LAST:event_buttonGoToTheCategorieActionPerformed

    private void buttonModificateShoppingCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificateShoppingCarActionPerformed
      
        
        // functions: method that open a new window accordin to the desition of the user (What want to do) and 
        //close the actual window
        WindowModificateShoppingCar window = new WindowModificateShoppingCar();
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_buttonModificateShoppingCarActionPerformed

    private void buttonBackWindowBuyProductToWindowOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackWindowBuyProductToWindowOptionActionPerformed
      
        
        // functions: method that open a new window accordin to the desition of the user (What want to do) and 
        //close the actual window
        WindowOption window = new WindowOption();
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_buttonBackWindowBuyProductToWindowOptionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowBuyProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowBuyProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowBuyProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowBuyProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowBuyProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBackWindowBuyProductToWindowOption;
    private javax.swing.JButton buttonBuyProductOfTheCatagorie;
    private javax.swing.JButton buttonGoToTheCategorie;
    private javax.swing.ButtonGroup buttonGroupProductCategories;
    private javax.swing.JButton buttonModificateShoppingCar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton radioButtonCategorieClothes;
    private javax.swing.JRadioButton radioButtonCategorieElectrodomestics;
    private javax.swing.JRadioButton radioButtonCategorieFurnitures;
    // End of variables declaration//GEN-END:variables
}
